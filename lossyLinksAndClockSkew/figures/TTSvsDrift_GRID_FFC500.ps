%!PS-Adobe-2.0
%%Title: TTSvsDrift_GRID_FFC500.ps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Wed Aug  3 09:51:51 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
 stroke
630 420 M
[ [(Helvetica) 140.0 0.0 true true ( 40)]
] -46.7 MRshow
714 1020 M
63 0 V
6185 0 R
-63 0 V
 stroke
630 1020 M
[ [(Helvetica) 140.0 0.0 true true ( 60)]
] -46.7 MRshow
714 1620 M
63 0 V
6185 0 R
-63 0 V
 stroke
630 1620 M
[ [(Helvetica) 140.0 0.0 true true ( 80)]
] -46.7 MRshow
714 2220 M
63 0 V
6185 0 R
-63 0 V
 stroke
630 2220 M
[ [(Helvetica) 140.0 0.0 true true ( 100)]
] -46.7 MRshow
714 2820 M
63 0 V
6185 0 R
-63 0 V
 stroke
630 2820 M
[ [(Helvetica) 140.0 0.0 true true ( 120)]
] -46.7 MRshow
714 3420 M
63 0 V
6185 0 R
-63 0 V
 stroke
630 3420 M
[ [(Helvetica) 140.0 0.0 true true ( 140)]
] -46.7 MRshow
714 4020 M
63 0 V
6185 0 R
-63 0 V
 stroke
630 4020 M
[ [(Helvetica) 140.0 0.0 true true ( 160)]
] -46.7 MRshow
714 4620 M
63 0 V
6185 0 R
-63 0 V
 stroke
630 4620 M
[ [(Helvetica) 140.0 0.0 true true ( 180)]
] -46.7 MRshow
714 420 M
0 63 V
0 4137 R
0 -63 V
 stroke
714 280 M
[ [(Helvetica) 140.0 0.0 true true ( 0)]
] -46.7 MCshow
1131 420 M
0 63 V
0 4137 R
0 -63 V
 stroke
1131 280 M
[ [(Helvetica) 140.0 0.0 true true ( 1)]
] -46.7 MCshow
1547 420 M
0 63 V
0 4137 R
0 -63 V
 stroke
1547 280 M
[ [(Helvetica) 140.0 0.0 true true ( 2)]
] -46.7 MCshow
1964 420 M
0 63 V
0 4137 R
0 -63 V
 stroke
1964 280 M
[ [(Helvetica) 140.0 0.0 true true ( 3)]
] -46.7 MCshow
2380 420 M
0 63 V
0 4137 R
0 -63 V
 stroke
2380 280 M
[ [(Helvetica) 140.0 0.0 true true ( 4)]
] -46.7 MCshow
2797 420 M
0 63 V
0 4137 R
0 -63 V
 stroke
2797 280 M
[ [(Helvetica) 140.0 0.0 true true ( 5)]
] -46.7 MCshow
3213 420 M
0 63 V
0 4137 R
0 -63 V
 stroke
3213 280 M
[ [(Helvetica) 140.0 0.0 true true ( 6)]
] -46.7 MCshow
4046 420 M
0 63 V
0 4137 R
0 -63 V
 stroke
4046 280 M
[ [(Helvetica) 140.0 0.0 true true ( 8)]
] -46.7 MCshow
4463 420 M
0 63 V
0 4137 R
0 -63 V
 stroke
4463 280 M
[ [(Helvetica) 140.0 0.0 true true ( 9)]
] -46.7 MCshow
4879 420 M
0 63 V
0 4137 R
0 -63 V
 stroke
4879 280 M
[ [(Helvetica) 140.0 0.0 true true ( 10)]
] -46.7 MCshow
1.000 UL
LTb
714 420 M
6248 0 V
0 4200 V
-6248 0 V
714 420 L
 stroke
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true (Time to Synchronize \(sec\))]
] -46.7 MCshow
grestore
3838 70 M
[ [(Helvetica) 140.0 0.0 true true (Number of Nodes with Drift)]
] -46.7 MCshow
3838 4830 M
[ [(Helvetica) 140.0 0.0 true true (Impact of Node Drift on Time to Synch when FFC=500 in a 4x4 grid topology)]
] -46.7 MCshow
1.000 UP
1.000 UL
LT0
714 1504 M
0 1257 V
683 1504 M
62 0 V
683 2761 M
62 0 V
1131 1503 M
0 1277 V
1100 1503 M
62 0 V
-62 1277 R
62 0 V
1547 1501 M
0 1269 V
1516 1501 M
62 0 V
-62 1269 R
62 0 V
1964 1493 M
0 1243 V
1933 1493 M
62 0 V
-62 1243 R
62 0 V
2380 1493 M
0 1243 V
2349 1493 M
62 0 V
-62 1243 R
62 0 V
2797 1487 M
0 1255 V
2766 1487 M
62 0 V
-62 1255 R
62 0 V
3213 1490 M
0 1255 V
3182 1490 M
62 0 V
-62 1255 R
62 0 V
3630 1490 M
0 1255 V
3599 1490 M
62 0 V
-62 1255 R
62 0 V
4046 1395 M
0 1553 V
4015 1395 M
62 0 V
-62 1553 R
62 0 V
4463 1473 M
0 1290 V
4432 1473 M
62 0 V
-62 1290 R
62 0 V
4879 1479 M
0 1265 V
4848 1479 M
62 0 V
-62 1265 R
62 0 V
5296 726 M
0 3661 V
5265 726 M
62 0 V
-62 3661 R
62 0 V
5712 752 M
0 3651 V
5681 752 M
62 0 V
-62 3651 R
62 0 V
6129 1514 M
0 1232 V
6098 1514 M
62 0 V
-62 1232 R
62 0 V
6545 1534 M
0 1220 V
6514 1534 M
62 0 V
-62 1220 R
62 0 V
6962 1557 M
0 1241 V
6931 1557 M
62 0 V
-62 1241 R
62 0 V
714 2133 Pls
1131 2142 Pls
1547 2136 Pls
1964 2115 Pls
2380 2115 Pls
2797 2115 Pls
3213 2118 Pls
3630 2118 Pls
4046 2171 Pls
4463 2118 Pls
4879 2112 Pls
5296 2557 Pls
5712 2577 Pls
6129 2130 Pls
6545 2144 Pls
6962 2177 Pls
1.000 UP
1.000 UL
LT1
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true (Time To Synchronize)]
] -46.7 MRshow
6395 4487 M
399 0 V
714 2133 M
417 9 V
416 -6 V
417 -21 V
416 0 V
417 0 V
416 3 V
417 0 V
416 53 V
417 -53 V
416 -6 V
417 445 V
416 20 V
417 -447 V
416 14 V
417 33 V
714 2133 Crs
1131 2142 Crs
1547 2136 Crs
1964 2115 Crs
2380 2115 Crs
2797 2115 Crs
3213 2118 Crs
3630 2118 Crs
4046 2171 Crs
4463 2118 Crs
4879 2112 Crs
5296 2557 Crs
5712 2577 Crs
6129 2130 Crs
6545 2144 Crs
6962 2177 Crs
6594 4487 Crs
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
